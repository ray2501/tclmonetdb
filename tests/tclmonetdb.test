# tclmonetdb.test --
#
#	Tests for the tclmonetdb extesnion
#

loadTestedCommands
package require monetdb

# Please make sure MonetDB server daemon is running
# Please make sure environment variable is setting correctly
# Test setup

set testhost localhost
set testport 50000
set username monetdb
set password monetdb
set database demo

#-------------------------------------------------------------------------------

test tclmonetdb-1.1 {create a connection, wrong # args} {*}{
    -body {
	monetdb db aaa
    }
    -returnCodes error
    -match glob
    -result {wrong # args*}
}

test tclmonetdb-1.2 {create a connection, port} {*}{
    -body {
	monetdb ::db -host $testhost -port aaa \
            -user $username -passwd $password -dbname $database
    }
    -returnCodes error
    -match glob
    -result {expected integer*}
}

test tclmonetdb-1.3 {create a connection, successful} {*}{
    -body {
	set result [catch {monetdb ::db -host $testhost -port $testport \
                     -user $username -passwd $password -dbname $database}]
    }
    -result 0
}

test tclmonetdb-1.4 {set autocommit, successful} {*}{
    -body {
        set result [db setAutocommit 1]
    }
    -result 1
}

test tclmonetdb-1.5 {get autocommit, successful} {*}{
    -body {
        set result [db getAutocommit]
    }
    -result 1
}

#-------------------------------------------------------------------------------

test tclmonetdb-2.1 {prepare statement, wrong # args} {*}{
    -body {
	::db prepare
    }
    -returnCodes error
    -match glob
    -result {wrong # args*}
}

test tclmonetdb-2.2 {Create a table} {*}{
    -body {
       set stmt [db prepare "CREATE TABLE emp_test (name VARCHAR(20), age INT)"]
       set result [$stmt execute]
    }
    -result 1
}

test tclmonetdb-2.3 {close a statement} {*}{
    -body {
        $stmt close
    }
    -result 1
}

test tclmonetdb-2.4 {Check table} {*}{
    -body {
       set stmt [db prepare "SELECT name from sys.tables where name = 'emp_test'"]
       $stmt execute
       set result [$stmt get_row_count]
    }
    -result 1
}

test tclmonetdb-2.5 {close a statement} {*}{
    -body {
        $stmt close
    }
    -result 1
}

test tclmonetdb-2.6 {Begin transaction} {*}{
    -body {
       set stmt [db prepare "START TRANSACTION"]
       set result [$stmt execute]
    }
    -result 1
}

test tclmonetdb-2.7 {close a statement} {*}{
    -body {
        $stmt close
    }
    -result 1
}

test tclmonetdb-2.8 {Insert data} {*}{
    -body {
       set stmt [db prepare "INSERT INTO emp_test VALUES ('John', 23)"]
       set result [$stmt execute]
    }
    -result 1
}

test tclmonetdb-2.9 {close a statement} {*}{
    -body {
        $stmt close
    }
    -result 1
}

test tclmonetdb-2.10 {Rollback} {*}{
    -body {
       set stmt [db prepare "ROLLBACK"]
       set result [$stmt execute]
    }
    -result 1
}

test tclmonetdb-2.11 {close a statement} {*}{
    -body {
        $stmt close
    }
    -result 1
}

test tclmonetdb-2.12 {Check table} {*}{
    -body {
       set stmt [db prepare "SELECT * from emp_test"]
       $stmt execute
       set result [$stmt get_row_count]
    }
    -result 0
}

test tclmonetdb-2.13 {close a statement} {*}{
    -body {
        $stmt close
    }
    -result 1
}

test tclmonetdb-2.14 {Begin transaction} {*}{
    -body {
       set stmt [db prepare "START TRANSACTION"]
       set result [$stmt execute]
    }
    -result 1
}

test tclmonetdb-2.15 {close a statement} {*}{
    -body {
        $stmt close
    }
    -result 1
}

test tclmonetdb-2.16 {Insert data} {*}{
    -body {
       set stmt [db prepare "INSERT INTO emp_test VALUES ('Monet', 23)"]
       set result [$stmt execute]
    }
    -result 1
}

test tclmonetdb-2.17 {close a statement} {*}{
    -body {
        $stmt close
    }
    -result 1
}

test tclmonetdb-2.18 {Commit} {*}{
    -body {
       set stmt [db prepare "COMMIT"]
       set result [$stmt execute]
    }
    -result 1
}

test tclmonetdb-2.19 {close a statement} {*}{
    -body {
        $stmt close
    }
    -result 1
}

test tclmonetdb-2.20 {Check table} {*}{
    -body {
       set stmt [db prepare "SELECT * from emp_test"]
       $stmt execute
       set result [$stmt get_row_count]
    }
    -result 1
}

test tclmonetdb-2.21 {close a statement} {*}{
    -body {
        $stmt close
    }
    -result 1
}

test tclmonetdb-2.22 {Drop a table} {*}{
    -body {
       set stmt [db prepare "DROP TABLE emp_test"]
       set result [$stmt execute]
    }
    -result 1
}

test tclmonetdb-2.23 {close a statement} {*}{
    -body {
        $stmt close
    }
    -result 1
}

#-------------------------------------------------------------------------------

catch {::db close}

cleanupTests
return
